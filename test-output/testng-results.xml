<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="13" passed="7" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-28T18:59:07 IST" name="Suite" finished-at="2022-11-28T19:01:36 IST" duration-ms="148912">
    <groups>
    </groups>
    <test started-at="2022-11-28T18:59:07 IST" name="Test" finished-at="2022-11-28T19:01:36 IST" duration-ms="148912">
      <class name="vTEST.WMS.ItemTest">
        <test-method is-config="true" signature="Extentsetup()[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:07 IST" name="Extentsetup" finished-at="2022-11-28T18:59:07 IST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Extentsetup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:07 IST" name="setup" finished-at="2022-11-28T18:59:12 IST" duration-ms="4667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:12 IST" name="beforeMethod" finished-at="2022-11-28T18:59:12 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void vTEST.WMS.ItemTest.loginWMS() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWMS()[pri:1, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:12 IST" name="loginWMS" finished-at="2022-11-28T18:59:38 IST" duration-ms="25885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWMS -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:38 IST" name="afterMethod" finished-at="2022-11-28T18:59:38 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWMS status=SUCCESS method=ItemTest.loginWMS()[pri:1, instance:vTEST.WMS.ItemTest@5d534f5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:38 IST" name="beforeMethod" finished-at="2022-11-28T18:59:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void vTEST.WMS.ItemTest.navigatetoItems() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="navigatetoItems()[pri:2, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:38 IST" name="navigatetoItems" finished-at="2022-11-28T18:59:48 IST" duration-ms="10355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigatetoItems -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:48 IST" name="afterMethod" finished-at="2022-11-28T18:59:48 IST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigatetoItems status=SUCCESS method=ItemTest.navigatetoItems()[pri:2, instance:vTEST.WMS.ItemTest@5d534f5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:50 IST" name="beforeMethod" finished-at="2022-11-28T18:59:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void vTEST.WMS.ItemTest.add_New_Item(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="add_New_Item(java.lang.String)[pri:3, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:50 IST" name="add_New_Item" data-provider="getItemCode" finished-at="2022-11-28T18:59:58 IST" duration-ms="8069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZAutoItem-A54]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_New_Item -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:58 IST" name="afterMethod" finished-at="2022-11-28T18:59:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=add_New_Item status=SUCCESS method=ItemTest.add_New_Item(java.lang.String)[pri:3, instance:vTEST.WMS.ItemTest@5d534f5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:58 IST" name="beforeMethod" finished-at="2022-11-28T18:59:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void vTEST.WMS.ItemTest.searchItem(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="searchItem(java.lang.String)[pri:4, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T18:59:58 IST" name="searchItem" data-provider="getItemCode" finished-at="2022-11-28T19:00:04 IST" duration-ms="6435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZAutoItem-A54]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchItem -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T19:00:04 IST" name="afterMethod" finished-at="2022-11-28T19:00:04 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchItem status=SUCCESS method=ItemTest.searchItem(java.lang.String)[pri:4, instance:vTEST.WMS.ItemTest@5d534f5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T19:00:04 IST" name="TearDown" finished-at="2022-11-28T19:00:05 IST" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method is-config="true" signature="CloseExtent()[pri:0, instance:vTEST.WMS.ItemTest@5d534f5d]" started-at="2022-11-28T19:01:36 IST" name="CloseExtent" finished-at="2022-11-28T19:01:37 IST" duration-ms="573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseExtent -->
      </class> <!-- vTEST.WMS.ItemTest -->
      <class name="vTEST.WMS.LocationTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:vTEST.WMS.LocationTest@3012646b]" started-at="2022-11-28T19:00:05 IST" name="setup" finished-at="2022-11-28T19:00:07 IST" duration-ms="1668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:vTEST.WMS.LocationTest@3012646b]" started-at="2022-11-28T19:00:07 IST" name="beforeMethod" finished-at="2022-11-28T19:00:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void vTEST.WMS.LocationTest.addNewLocation() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewLocation()[pri:1, instance:vTEST.WMS.LocationTest@3012646b]" started-at="2022-11-28T19:00:07 IST" name="addNewLocation" finished-at="2022-11-28T19:00:14 IST" duration-ms="7030" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='dropdown-toggle ng-scope' and @data-nav-menu-state='warehouse']"}
  (Session info: chrome=107.0.5304.107)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'DESKTOP-R99HG8B', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9a3fd425746de50f09f7b3401477b014, findElement {using=xpath, value=//*[@class='dropdown-toggle ng-scope' and @data-nav-menu-state='warehouse']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.107, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\naved\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50340}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50340/devtoo..., se:cdpVersion: 107.0.5304.107, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9a3fd425746de50f09f7b3401477b014]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='dropdown-toggle ng-scope' and @data-nav-menu-state='warehouse']"}
  (Session info: chrome=107.0.5304.107)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'DESKTOP-R99HG8B', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9a3fd425746de50f09f7b3401477b014, findElement {using=xpath, value=//*[@class='dropdown-toggle ng-scope' and @data-nav-menu-state='warehouse']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.107, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\naved\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50340}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50340/devtoo..., se:cdpVersion: 107.0.5304.107, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9a3fd425746de50f09f7b3401477b014
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at vTEST.WMS.LocationPage.addLocation(LocationPage.java:26)
at vTEST.WMS.LocationTest.addNewLocation(LocationTest.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewLocation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:vTEST.WMS.LocationTest@3012646b]" started-at="2022-11-28T19:00:14 IST" name="afterMethod" finished-at="2022-11-28T19:00:14 IST" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewLocation status=FAILURE method=LocationTest.addNewLocation()[pri:1, instance:vTEST.WMS.LocationTest@3012646b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:vTEST.WMS.LocationTest@3012646b]" started-at="2022-11-28T19:00:14 IST" name="beforeMethod" finished-at="2022-11-28T19:00:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void vTEST.WMS.LocationTest.loginWMS() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWMS()[pri:1, instance:vTEST.WMS.LocationTest@3012646b]" started-at="2022-11-28T19:00:14 IST" name="loginWMS" finished-at="2022-11-28T19:00:39 IST" duration-ms="25141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWMS -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:vTEST.WMS.LocationTest@3012646b]" started-at="2022-11-28T19:00:39 IST" name="afterMethod" finished-at="2022-11-28T19:00:39 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWMS status=SUCCESS method=LocationTest.loginWMS()[pri:1, instance:vTEST.WMS.LocationTest@3012646b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:vTEST.WMS.LocationTest@3012646b]" started-at="2022-11-28T19:00:39 IST" name="TearDown" finished-at="2022-11-28T19:00:40 IST" duration-ms="422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- vTEST.WMS.LocationTest -->
      <class name="vTEST.WMS.RR_Test">
        <test-method is-config="true" signature="setup()[pri:0, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:00:40 IST" name="setup" finished-at="2022-11-28T19:00:41 IST" duration-ms="1778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:00:41 IST" name="beforeMethod" finished-at="2022-11-28T19:00:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void vTEST.WMS.RR_Test.loginWMS()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWMS()[pri:1, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:00:41 IST" name="loginWMS" finished-at="2022-11-28T19:01:04 IST" duration-ms="22639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWMS -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:01:04 IST" name="afterMethod" finished-at="2022-11-28T19:01:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWMS status=SUCCESS method=RR_Test.loginWMS()[pri:1, instance:vTEST.WMS.RR_Test@5824a83d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:01:04 IST" name="beforeMethod" finished-at="2022-11-28T19:01:04 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void vTEST.WMS.RR_Test.selectReceive() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectReceive()[pri:2, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:01:04 IST" name="selectReceive" finished-at="2022-11-28T19:01:13 IST" duration-ms="9184" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at vTEST.WMS.RR_Test.selectReceive(RR_Test.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReceive -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:01:13 IST" name="afterMethod" finished-at="2022-11-28T19:01:14 IST" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReceive status=FAILURE method=RR_Test.selectReceive()[pri:2, instance:vTEST.WMS.RR_Test@5824a83d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:01:14 IST" name="beforeMethod" finished-at="2022-11-28T19:01:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void vTEST.WMS.RR_Test.ReceiveStock() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ReceiveStock()[pri:3, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:01:14 IST" name="ReceiveStock" finished-at="2022-11-28T19:01:35 IST" duration-ms="21175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveStock -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:01:35 IST" name="afterMethod" finished-at="2022-11-28T19:01:35 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveStock status=SUCCESS method=RR_Test.ReceiveStock()[pri:3, instance:vTEST.WMS.RR_Test@5824a83d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:vTEST.WMS.RR_Test@5824a83d]" started-at="2022-11-28T19:01:35 IST" name="TearDown" finished-at="2022-11-28T19:01:36 IST" duration-ms="1391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- vTEST.WMS.RR_Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
